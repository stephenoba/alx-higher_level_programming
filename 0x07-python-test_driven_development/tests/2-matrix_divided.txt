The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:

Divide matrix by 2
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Matrix of none int or none float types
    >>> matrix = [["hello", 2, 7.9], ["0", 1, 3]]
    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix rows must be lists
    >>> matrix = [[7, 6, 4], "98"]
    >>> matrix_divided(matrix, 8)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix rows should be of equal size
    >>> matrix = [[1, 2, 3], [4, 5, 6], [9]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Matrix must be divided by a number
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, [2])
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

div can't be equal to 0
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Passing no arguments to print_square
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Passing no arguments to print_square
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
